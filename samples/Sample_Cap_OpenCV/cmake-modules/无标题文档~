# 注意此cmake文件中的3个变量名
# TEST_INCLUDE_DIR -- <name>_INCLUDE_DIR
# TEST_LIBRARY     -- <name>_LIBRARY
# TEST_FOUND       -- <name>_FOUND
# 惯例需要定义这3个变量，命名规则如上，以便与cmake预定义的cmake模块中的变量名统一

# FIND_PATH和FIND_LIBARY的path部分，一定要是.h文件和lib文件所在的当前目录，否则找不到
FIND_PATH(TEST_INCLUDE_DIR /home/xt/work/test)
MESSAGE(STATUS "TEST_INCLUDE_DIR: " ${TEST_INCLUDE_DIR})

FIND_LIBRARY(TEST_LIBRARY TEST /home/xt/work/test)
MESSAGE(STATUS "TEST_LIBRARY: " ${TEST_LIBRARY})


IF (TEST_INCLUDE_DIR AND TEST_LIBRARY)
    SET(TEST_FOUND TRUE)
ENDIF(TEST_INCLUDE_DIR AND TEST_LIBRARY)

IF (TEST_FOUND)
    # 若FIND_PACKAGE命令没有指定QUIET参数，那下面的IF语句就为真
    IF (NOT TEST_FIND_QUIETLY)
        MESSAGE(STATUS "Found TEST: ${TEST_LIBRARY}")
    ENDIF (NOT TEST_FIND_QUIETLY)
ELSE (TEST FOUND)
    # 如果FIND_PACKAGE命令指定了REQUIRED参数，说明这个库是此Project必须的
    # 对应下面的TEST_FIND_REQUIRED变量
    IF (TEST_FIND_REQUIRED)
        MESSAGE(FATAL_ERROR "Could not find TEST library")
    ENDIF (TEST_FIND_REQUIRED)
ENDIF (TEST_FOUND)

